# create attractive postscript plot of tree
post(fitK, file = "kyphosistree.ps", title = "Classification Tree for Kyphosis") # might need to convert to PDF (distill)
# plot tree
plot(fitK, uniform=TRUE, main="Classification Tree for Kyphosis")
text(fitK, use.n=TRUE, all=TRUE, cex=.8)
# create attractive postscript plot of tree
post(fitK, file = "kyphosistree.ps", title = "Classification Tree for Kyphosis") # might need to convert to PDF (distill)
pfitK<- prune(fitK, cp=   fitK$cptable[which.min(fitK$cptable[,"xerror"]),"CP"])
plot(pfitK, uniform=TRUE, main="Pruned Classification Tree for Kyphosis")
text(pfitK, use.n=TRUE, all=TRUE, cex=.8)
post(pfitK, file = "ptree.ps", title = "Pruned Classification Tree for Kyphosis”)
require(rpart)
Swiss_rpart <- rpart(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_rpart) # try some different plot options
text(swiss_rpart) # try some different text options
require(party)
treeSwiss<-ctree(Species ~ ., data=iris)
plot(treeSwiss)
cforest(Species ~ ., data=iris, controls=cforest_control(mtry=2, mincriterion=0))
treeFert<-ctree(Fertility ~ Agriculture + Education + Catholic, data = swiss)
cforest(Fertility ~ Agriculture + Education + Catholic, data = swiss, controls=cforest_control(mtry=2, mincriterion=0))
library(tree)
tr <- tree(Species ~ ., data=iris)
tr
tr$frame
plot(tr)
text(tr)
#find "prettier" ways to plot the tree
#find "prettier" ways to plot the tree
require(rpart)
Swiss_rpart <- rpart(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_rpart) # try some different plot options
data(swiss)
Swiss_rpart <- rpart(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_rpart) # try some different plot options
swiss_rpart <- rpart(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_rpart) # try some different plot options
text(swiss_rpart) # try some different text options
require(party)
treeSwiss<-ctree(Species ~ ., data=iris)
plot(treeSwiss)
cforest(Species ~ ., data=iris, controls=cforest_control(mtry=2, mincriterion=0))
treeFert<-ctree(Fertility ~ Agriculture + Education + Catholic, data = swiss)
cforest(Fertility ~ Agriculture + Education + Catholic, data = swiss, controls=cforest_control(mtry=2, mincriterion=0))
library(tree)
tr <- tree(Species ~ ., data=iris)
tr
tr$frame
plot(tr)
text(tr)
plot.tree.sequence(tr)
plot(tr)
text(tr, pretty=0)
plot(tr)
text(tr, pretty=1)
plot(tr)
text(tr, pretty=10)
help("text")
text(tr, pretty=TRUE)
plot(tr)
text(tr, pretty=TRUE)
plot(tr)
text(tr)
text(tr, pretty=2)
plot(tr)
text(tr, pretty=2)
plot(tr)
text(tr, pretty=0)
plot(tr)
text(tr, pretty=NULL)
plot(tr)
text(tr, pretty=1)
# Conditional Inference Tree for Mileage
fit2M <- ctree(Mileage~Price + Country + Reliability + Type, data=na.omit(cu.summary))
summary(fit2M)
# plot tree
plot(fit2M, uniform=TRUE, main="CI Tree Tree for Mileage ")
text(fit2M, use.n=TRUE, all=TRUE, cex=.8)
fitK <- ctree(Kyphosis ~ Age + Number + Start, data=kyphosis)
plot(fitK, main="Conditional Inference Tree for Kyphosis”)
plot(fitK, main="Conditional Inference Tree for Kyphosis",type="simple")
fitK <- ctree(Kyphosis ~ Age + Number + Start, data=kyphosis)
plot(fitK, main="Conditional")
fitK <- ctree(Kyphosis ~ Age + Number + Start, data=kyphosis)
plot(fitK, main="Conditional Inference Tree for Kyphosis")
plot(fitK, main="Conditional Inference Tree for Kyphosis",type="simple")
obesity_data <- read.csv("ObesityDataSet_raw_and_data_sinthetic.csv")
# Load Obesity data #
setwd("C:/Users/Naran/DataAnalytics2022_Alejandro_Naranjo/UCI_Obesity_And_Diabetes/Obesity datasets")
obesity_data <- read.csv("ObesityDataSet_raw_and_data_sinthetic.csv")
View(obesity_data)
unique(obesity_data)
unique(obesity_data$Gender)
ggplot(obesity_data, aes(x = Gender)) + geom_histogram()
library(ggplot2)
ggplot(obesity_data, aes(x = Gender)) + geom_histogram()
ggplot(obesity_data, aes(x = Gender, stat="count")) + geom_histogram()
ggplot(obesity_data, aes(x = Gender)) + geom_histogram(stat="count")
ggplot(obesity_data, aes(x = Gender)) +
geom(stat="count") +
xtitle(" Sex ") +
ytitle(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(obesity_data, aes(x = Gender)) +
geom_histogram(stat="count") +
xtitle(" Sex ") +
ytitle(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(obesity_data, aes(x = Gender)) +
geom_histogram(stat="count") +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(obesity_data, aes(x = Gender)) +
geom_histogram(stat="count", label=..count..) +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(obesity_data, aes(x = Gender)) +
geom_histogram(stat="count", label="count") +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(obesity_data, aes(x = Gender)) +
geom_histogram(stat="count", label="count") +
stat_bin(binwidth = 100, geom="text", size = 3.5, aes(label =..count..))
ggplot(obesity_data, aes(x = Gender)) +
geom_histogram(stat="count", binwidth = 100) +
stat_bin(binwidth = 100, geom="text", size = 3.5, aes(label =..count..)) +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(obesity_data, aes(x = Gender)) +
geom_histogram(stat="count", binwidth = 100) +
stat_bin(binwidth = 100, geom="text", size = 3.5)) +
ggplot(obesity_data, aes(x = Gender)) +
geom_histogram(stat="count", binwidth = 100) +
stat_bin(binwidth = 100, geom="text", size = 3.5) +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(obesity_data, aes(x = Gender)) +
geom_histogram(stat="count", binwidth = 100) +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(obesity_data, aes(x = Gender)) +
geom_bar(stat="identity") +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(obesity_data, aes(x = Gender)) +
geom_bar(stat="count") +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
geom_text(aes(label=c(10,10)) +
ggplot(obesity_data, aes(x = Gender)) +
geom_bar(stat="count") +
geom_text(aes(label=c(10,10))) +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
exit
ggplot(obesity_data, aes(x = Gender)) +
geom_bar(stat="count") +
geom_text(aes(label=c(10,10)))
ggplot(obesity_data, aes(x = Gender)) +
geom_histogram(stat="count") +
geom_text(aes(label=c(10,10)))
ggplot(obesity_data, aes(x = Gender)) +
geom_histogram(stat="count") +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
# Checking to see what the distribution between male and female entries
Data_Split_By_Gender <- data.frame(male = count(obesity_data[obesity_data$Gender == "Male"])
# Checking to see what the distribution between male and female entries
Data_Split_By_Gender <- data.frame(male =
# Checking to see what the distribution between male and female entries
Data_Split_By_Gender <- data.frame(male =
count(obesity_data[obesity_data$Gender == "Male"]))
# Checking to see what the distribution between male and female entries
Data_Split_By_Gender <- data.frame(male =
length(obesity_data[obesity_data$Gender == "Male"]))
# Checking to see what the distribution between male and female entries
Data_Split_By_Gender <- data.frame(male =
length(obesity_data[obesity_data$Gender == "Male"],))
# Checking to see what the distribution between male and female entries
Data_Split_By_Gender <- data.frame(male =
length(obesity_data[obesity_data$Gender == "Male",]))
View(Data_Split_By_Gender)
Obesity_data$Gender
obesity_data$Gender
obesity_data[obesity_data$Gender == "Male",]
# Checking to see what the distribution between male and female entries
Data_Split_By_Gender <- data.frame(male =
nrow(obesity_data[obesity_data$Gender == "Male",]))
View(Data_Split_By_Gender)
View(Data_Split_By_Gender)
# Checking to see what the distribution between male and female entries
Freq_male <- nrow(obesity_data[obesity_data$Gender == "Male",])
Freq_female <- nrow(obesity_data[obesity_data$Gender == "Female",])
Frequency_by_Gender <- data.frame(Sex = c("Male","Female"),
Freq = c(Freq_male, Freq_female))
ggplot(Frequency_by_Gender, aes(x = Sex)) +
geom_bar(stat="indentity") +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(Frequency_by_Gender, aes(x = Sex)) +
geom_bar(stat="identity") +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(Frequency_by_Gender, aes(x = Sex, y = Freq)) +
geom_bar(stat="identity") +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(Frequency_by_Gender, aes(x = Sex, y = Freq, fill=Sex)) +
geom_bar(stat="identity") +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(Frequency_by_Gender, aes(x = Sex, y = Freq, fill=Sex)) +
geom_bar(stat="identity") +
geom_text(aes(label = Freq), vjust = 0) +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(Frequency_by_Gender, aes(x = Sex, y = Freq, fill=Sex)) +
geom_bar(stat="identity") +
geom_text(aes(label = Freq), vjust = 0.3) +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
ggplot(Frequency_by_Gender, aes(x = Sex, y = Freq, fill=Sex)) +
geom_bar(stat="identity") +
geom_text(aes(label = Freq), vjust = -0.4) +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
summary(obesity_data)
ggplot(obesity_data, aes(x = age)) +
geom_histogram()
ggplot(obesity_data, aes(x = Age)) +
geom_histogram()
ggplot(obesity_data, aes(x = Age)) +
geom_histogram(binwidth = 1)
ggplot(obesity_data, aes(x = Age)) +
geom_histogram(binwidth = 2)
ggplot(obesity_data, aes(x = Age)) +
geom_histogram(binwidth = 10)
ggplot(obesity_data, aes(x = Age)) +
geom_histogram(binwidth = 5)
ggplot(obesity_data, aes(x = Age)) +
geom_histogram(binwidth = 1)
ggplot(obesity_data, aes(x = Age)) +
geom_histogram(binwidth = 1, labels=TRUE)
ggplot(obesity_data, aes(x = Age)) +
geom_histogram(binwidth = 1, labels=TRUE)+
stat_bin(binwidth=1) + ylim(c(0, 12)) +
stat_bin(binwidth=1, geom="text", aes(label=..count..), vjust=-1.5)
ggplot(obesity_data, aes(x = Age)) +
geom_histogram(binwidth = 1, labels=TRUE)+
stat_bin(binwidth=1)+
stat_bin(binwidth=1, geom="text", aes(label=..count..), vjust=-1.5)
ggplot(obesity_data, aes(x = Age)) +
stat_bin(binwidth=1)+
stat_bin(binwidth=1, geom="text", aes(label=..count..), vjust=-1.5)
ggplot(obesity_data, aes(x = Age)) +
stat_bin(binwidth=1)+
stat_bin(binwidth=1, geom="text", aes(label=..count..), vjust=-1.5)+
xlab(" Age (Years) ") +
ylab(" Count ") +
labs(title = "Age Distribution")
Smokers <- ggplot(obesity_data, aes(x = SMOKE)) +
geom_histogram(stat="count", fill=SMOKE)
obsity_data$Smoke
obesity_data$SMOKE
Smokers <- ggplot(obesity_data, aes(x = SMOKE)) +
geom_histogram(stat="count", fill=SMOKE)
Smokers <- ggplot(obesity_data, aes(x = Obesity_data$SMOKE)) +
geom_histogram(stat="count", fill=SMOKE)
colnames(obesity_data)
Smokers <- ggplot(obesity_data, aes(x = Smoke)) +
geom_histogram(stat="count", fill=SMOKE)
Smokers <- ggplot(obesity_data, aes(x = Smoke)) +
geom_histogram(stat="count", fill=Smoke)
Smokers <- ggplot(obesity_data, aes(x = Smoke)) +
geom_histogram(stat="count")
Smokers
Smokers <- ggplot(obesity_data, aes(x = Smoke)) +
geom_histogram(stat="count")
Smokers
ggplot(obesity_data, aes(x = NObeyesdad)) +
stat_bin(binwidth=1)+
stat_bin(binwidth=1, geom="text", aes(label=..count..), vjust=-1.5)+
xlab(" Age (Years) ") +
ylab(" Count ") +
labs(title = "Age Distribution")
ggplot(obesity_data, aes(x = NObeyesdad)) +
geom_histogram(stat="count")+
xlab(" Age (Years) ") +
ylab(" Count ") +
labs(title = "Age Distribution")
ggplot(obesity_data, aes(x = NObeyesdad)) +
geom_histogram(stat="count", fill= NObeyesdad)+
xlab(" Age (Years) ") +
ylab(" Count ") +
labs(title = "Age Distribution")
ggplot(obesity_data, aes(x = NObeyesdad,fill= NObeyesdad)) +
geom_histogram(stat="count")+
xlab(" Age (Years) ") +
ylab(" Count ") +
labs(title = "Age Distribution")
ggplot(obesity_data, aes(x = NObeyesdad,fill= NObeyesdad)) +
geom_histogram(stat="count")+
stat_bin( geom="text", aes(label=..count..), vjust=-1.5)+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Age Distribution")
ggplot(obesity_data, aes(x = NObeyesdad,fill= NObeyesdad)) +
geom_histogram(stat="count", label=..count..)+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Age Distribution")
geom_histogram(aes(stat="count", label=..count..)+
ggplot(obesity_data, aes(x = NObeyesdad,fill= NObeyesdad)) +
geom_histogram(aes(stat="count", label=..count..))+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Age Distribution")
asd
ggplot(obesity_data, aes(x = NObeyesdad,fill= NObeyesdad)) +
geom_histogram(aes(stat="count", label=..count..))+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Age Distribution")
ggplot(obesity_data, aes(x = NObeyesdad,fill= NObeyesdad)) +
geom_histogram(aes(stat="count", label=..count..))+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Age Distribution")
ggplot(obesity_data, aes(x = NObeyesdad,fill= NObeyesdad, label=..count..)) +
geom_histogram(stat="count"))+
ggplot(obesity_data, aes(x = NObeyesdad,fill= NObeyesdad, label=..count..)) +
geom_histogram(stat="count")+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Age Distribution")
ggplot(obesity_data, aes(x = NObeyesdad,fill= NObeyesdad, label=..count..)) +
geom_histogram(stat="count")+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Destibution of Dependent Feature (NOBeyesdad)")
Age_Fre <- ggplot(Frequency_by_Gender, aes(x = Sex, y = Freq, fill=Sex)) +
geom_bar(stat="identity") +
geom_text(aes(label = Freq), vjust = -0.4) +
xlab(" Sex ") +
ylab(" Count ") +
labs(title = "Counting the distribution of Male and Female")
Age_Fre
ggplot(obesity_data, aes(x = NObeyesdad,fill= NObeyesdad, label=..count..)) +
geom_histogram(stat="count")+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Destibution of Dependent Feature (NOBeyesdad)")
obesity_data$Gender <- obesity_data[obesity_data$Gender== "Yes", ]= 1
sapply(obesity_data$Gender, unclass)
test <- sapply(obesity_data$Gender, unclass)
View(test)
ggplot(obesity_data, aes(x = weight)) +
geom_histogram(bin=1)+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Destibution of Dependent Feature (NOBeyesdad)")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(bin=1)+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Destibution of Dependent Feature (NOBeyesdad)")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(bin=5)+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Destibution of Dependent Feature (NOBeyesdad)")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth =5)+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Destibution of Dependent Feature (NOBeyesdad)")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth =5)+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Destibution of Dependent Feature (NOBeyesdad)")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth =10)+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Destibution of Dependent Feature (NOBeyesdad)")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth =5)+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Destibution of Dependent Feature (NOBeyesdad)")
source("C:/Users/Naran/DataAnalytics2022_Alejandro_Naranjo/UCI_Obesity_And_Diabetes/Obesity_Data_Script.R", echo=TRUE)
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth =0.1)+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Weight Distribution (Binsize = 5")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth =1)+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Weight Distribution (Binsize = 5")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth =2 )+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Weight Distribution (Binsize = 5")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth = 3 )+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Weight Distribution (Binsize = 5")
ggplot(obesity_data, aes(x = Weight, y=Age)) +
geom_histogram(binwidth = 3 )+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Weight Distribution (Binsize = 5")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth = 3 )+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Weight Distribution (Binsize = 5")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth = 5 )+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Weight Distribution (Binsize = 5")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth = 4 )+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Weight Distribution (Binsize = 5")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth = 3)+
xlab(" Category ") +
ylab(" Count ") +
labs(title = "Weight Distribution (Binsize = 5")
ggplot(obesity_data, aes(x = Weight)) +
geom_histogram(binwidth = 3)+
xlab(" Weight ") +
ylab(" Count ") +
labs(title = "Weight Distribution (Binsize = 3")
convert <- sapply(Test, is.factor)
Test <- obesity_data
convert <- sapply(Test, is.factor)
Test2 <- (Test[, convert], unclass)
Test2 <- (Test[, convert] unclass)
Test2 <- (Test[, convert],unclass)
Test2 <- sapply(Test[, convert],unclass)
out <- cbind(Test[,!convert], Test2)
out
out <- data.matrix(obesity_data)
out
View(out)
View(obesity_data)
working <- data.matrix(obesity_data[1:16])
View(working)
working$New <- obesity_data$NObeyesdad
View(working)
View(working)
df_new <- cbind(working, obesity_data$NObeyesdad)
View(df_new)
length(working)
working <- data.frame(data.matrix(obesity_data[1:16]))
View(working)
df_new <- cbind(working, obesity_data$NObeyesdad)
df_new
View(df_new)
# Need to normalize the data
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
df[1:16] <- as.data.frame(lapply(df[1:16],normalize))
# Need to normalize the data
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
catergorical_data_to_numeric[1:16] <- as.data.frame(
lapply(catergorical_data_to_numeric[1:16],normalize))
catergorical_data_to_numeric <- data.frame(data.matrix(obesity_data[1:16]))
# Need to normalize the data
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
catergorical_data_to_numeric[1:16] <- as.data.frame(
lapply(catergorical_data_to_numeric[1:16],normalize))
new_obesity_data <- cbind(working, obesity_data$NObeyesdad)
View(new_obesity_data)
View(catergorical_data_to_numeric)
new_obesity_data <- cbind(catergorical_data_to_numeric, obesity_data$NObeyesdad)
View(new_obesity_data)
setwd("C:/Users/Naran/DataAnalytics2022_Alejandro_Naranjo/UCI_Obesity_And_Diabetes/Diabetes datasets")
diabetic_data <- read.csv("diabetic_data.csv")
view(diabetic_data)
View(diabetic_data)
