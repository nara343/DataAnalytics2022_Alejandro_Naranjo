df_ny10 <- data.frame(read.csv("nyt10.csv"))
df_ny10 <- data.frame(read.csv("nyt10.csv"))
df_ny10 <- data.frame(read.csv("nyt10.csv"))
require(rpart)
Swiss_rpart <- rpart(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_rpart) # try some different plot options
data("swiss")
Swiss_rpart <- rpart(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_rpart) # try some different plot options
View(swiss)
plot(swiss_rpart) # try some different plot options
library(rpart)
#Loading in the swiss data
data("swiss")
Swiss_rpart <- rpart(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_rpart) # try some different plot options
plot(Swiss_rpart) # try some different plot options
text(Swiss_rpart) # try some different text options
help(rpart)
# Regression Tree Example
require(rpart)
# build the  tree
fitM <- rpart(Mileage~Price + Country + Reliability + Type, method="anova", data=cu.summary)
printcp(fitM) # display the results
plotcp(fitM)
summary(fitM)
par(mfrow=c(1,2))
rsq.rpart(fitM) # visualize cross-validation results
# plot tree
plot(fitM, uniform=TRUE, main="Regression Tree for Mileage ")
text(fitM, use.n=TRUE, all=TRUE, cex=.8)
# prune the tree
pfitM<- prune(fitM, cp=0.01160389) # from cptable??? adjust this to see the effect
# plot the pruned tree
plot(pfitM, uniform=TRUE, main="Pruned Regression Tree for Mileage")
text(pfitM, use.n=TRUE, all=TRUE, cex=.8)
post(pfitM, file = ”ptree2.ps", title = "Pruned Regression Tree for Mileage”)
post(pfitM, file = ”ptree2.ps", title = "Pruned Regression Tree for Mileage”)
post(pfitM, file = "ptree2.ps", title = "Pruned Regression Tree for Mileage”)
post(pfitM, file = "ptree2.ps", title = "Pruned Regression Tree for Mileage”
# prune the tree
pfitM<- prune(fitM, cp=0.01160389) # from cptable??? adjust this to see the effect
# plot the pruned tree
plot(pfitM, uniform=TRUE, main="Pruned Regression Tree for Mileage")
text(pfitM, use.n=TRUE, all=TRUE, cex=.8)
post(pfitM, file = "ptree2.ps", title = "Pruned Regression Tree for Mileage”)
post(pfitM, file = "ptree2.ps", title = "Pruned Regression Tree for Mileage”)
data(Glass, package="mlbench")
install.packages(mlbench)
install.packages("mlbench")
library(mlbench)
data(Glass, package="mlbench")
index <- 1:nrow(Glass)
testindex <- sample(index, trunc(length(index)/3))
testset <- Glass[testindex,]
trainset <- Glass[-testindex,]
rpart.model <- rpart(Type ~ ., data = trainset)
rpart.pred <- predict(rpart.model, testset[,-10], type = "class")
printcp(rpart.model)
plotcp(rpart.model)
printcp(rpart.model)
plotcp(rpart.model)
rsq.rpart(rpart.model)
print(rpart.model)
plot(rpart.model,compress=TRUE)
text(rpart.model, use.n=TRUE)
plot(rpart.pred)
text(rpart.model, use.n=TRUE)
plot(rpart.model,compress=TRUE)
text(rpart.model, use.n=TRUE)
plot(rpart.pred)
fitK <- rpart(Kyphosis ~ Age + Number + Start, method="class", data=kyphosis)
printcp(fitK) # display the results
plotcp(fitK) # visualize cross-validation results
summary(fitK) # detailed summary of splits
# plot tree
plot(fitK, uniform=TRUE, main="Classification Tree for Kyphosis")
text(fitK, use.n=TRUE, all=TRUE, cex=.8)
# create attractive postscript plot of tree
post(fitK, file = “kyphosistree.ps", title = "Classification Tree for Kyphosis") # might need to convert to PDF (distill)
# create attractive postscript plot of tree
post(fitK, file = "kyphosistree.ps", title = "Classification Tree for Kyphosis") # might need to convert to PDF (distill)
# plot tree
plot(fitK, uniform=TRUE, main="Classification Tree for Kyphosis")
text(fitK, use.n=TRUE, all=TRUE, cex=.8)
# create attractive postscript plot of tree
post(fitK, file = "kyphosistree.ps", title = "Classification Tree for Kyphosis") # might need to convert to PDF (distill)
pfitK<- prune(fitK, cp=   fitK$cptable[which.min(fitK$cptable[,"xerror"]),"CP"])
plot(pfitK, uniform=TRUE, main="Pruned Classification Tree for Kyphosis")
text(pfitK, use.n=TRUE, all=TRUE, cex=.8)
post(pfitK, file = "ptree.ps", title = "Pruned Classification Tree for Kyphosis”)
require(rpart)
Swiss_rpart <- rpart(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_rpart) # try some different plot options
text(swiss_rpart) # try some different text options
require(party)
treeSwiss<-ctree(Species ~ ., data=iris)
plot(treeSwiss)
cforest(Species ~ ., data=iris, controls=cforest_control(mtry=2, mincriterion=0))
treeFert<-ctree(Fertility ~ Agriculture + Education + Catholic, data = swiss)
cforest(Fertility ~ Agriculture + Education + Catholic, data = swiss, controls=cforest_control(mtry=2, mincriterion=0))
library(tree)
tr <- tree(Species ~ ., data=iris)
tr
tr$frame
plot(tr)
text(tr)
#find "prettier" ways to plot the tree
#find "prettier" ways to plot the tree
require(rpart)
Swiss_rpart <- rpart(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_rpart) # try some different plot options
data(swiss)
Swiss_rpart <- rpart(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_rpart) # try some different plot options
swiss_rpart <- rpart(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_rpart) # try some different plot options
text(swiss_rpart) # try some different text options
require(party)
treeSwiss<-ctree(Species ~ ., data=iris)
plot(treeSwiss)
cforest(Species ~ ., data=iris, controls=cforest_control(mtry=2, mincriterion=0))
treeFert<-ctree(Fertility ~ Agriculture + Education + Catholic, data = swiss)
cforest(Fertility ~ Agriculture + Education + Catholic, data = swiss, controls=cforest_control(mtry=2, mincriterion=0))
library(tree)
tr <- tree(Species ~ ., data=iris)
tr
tr$frame
plot(tr)
text(tr)
plot.tree.sequence(tr)
plot(tr)
text(tr, pretty=0)
plot(tr)
text(tr, pretty=1)
plot(tr)
text(tr, pretty=10)
help("text")
text(tr, pretty=TRUE)
plot(tr)
text(tr, pretty=TRUE)
plot(tr)
text(tr)
text(tr, pretty=2)
plot(tr)
text(tr, pretty=2)
plot(tr)
text(tr, pretty=0)
plot(tr)
text(tr, pretty=NULL)
plot(tr)
text(tr, pretty=1)
# Conditional Inference Tree for Mileage
fit2M <- ctree(Mileage~Price + Country + Reliability + Type, data=na.omit(cu.summary))
summary(fit2M)
# plot tree
plot(fit2M, uniform=TRUE, main="CI Tree Tree for Mileage ")
text(fit2M, use.n=TRUE, all=TRUE, cex=.8)
fitK <- ctree(Kyphosis ~ Age + Number + Start, data=kyphosis)
plot(fitK, main="Conditional Inference Tree for Kyphosis”)
plot(fitK, main="Conditional Inference Tree for Kyphosis",type="simple")
fitK <- ctree(Kyphosis ~ Age + Number + Start, data=kyphosis)
plot(fitK, main="Conditional")
fitK <- ctree(Kyphosis ~ Age + Number + Start, data=kyphosis)
plot(fitK, main="Conditional Inference Tree for Kyphosis")
plot(fitK, main="Conditional Inference Tree for Kyphosis",type="simple")
setwd("C:/Users/Naran/DataAnalytics2022_Alejandro_Naranjo/UCI_Obesity_And_Diabetes/Diabetes datasets")
diabetic_data <- read.csv("diabetic_data.csv")
#Scatter plot between admission and discharge
colnames(diabetic_data)
scatter_admission_discharge <- ggplot(diabetic_data,
aes(x = admission_type_id, discharge_disposition_id)) +
geom_point(aes(color = race, shape=race)) +
xlab("Admission Type") +
ylab("discharge_diposition") +
ggtitle("Admission Type Id vs Discharge Diposition Id")
library(ggplot2)
scatter_admission_discharge <- ggplot(diabetic_data,
aes(x = admission_type_id, discharge_disposition_id)) +
geom_point(aes(color = race, shape=race)) +
xlab("Admission Type") +
ylab("discharge_diposition") +
ggtitle("Admission Type Id vs Discharge Diposition Id")
scatter
scatter_admission_discharge
scatter_admission_discharge <- ggplot(diabetic_data,
aes(x = admission_type_id, discharge_disposition_id)) +
geom_point(aes(color = gender, shape=gender)) +
xlab("Admission Type") +
ylab("discharge_diposition") +
ggtitle("Admission Type Id vs Discharge Diposition Id")
scatter_admission_discharge
scatter_admission_discharge <- ggplot(diabetic_data,
aes(x = admission_type_id, discharge_disposition_id)) +
geom_point(aes(color = gender, shape=gender), size = 3) +
xlab("Admission Type") +
ylab("discharge_diposition") +
ggtitle("Admission Type Id vs Discharge Diposition Id")
scatter_admission_discharge
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age)) +
geom_histogram(stat="count")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race)) +
geom_histogram(stat="count")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race)) +
geom_histogram(stat="count") +
xlabs("Age Range") +
ylabs("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race)) +
geom_histogram(stat="count") +
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race)) +
geom_histogram(stat="count", aes(label=..count..)) +
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
geom_histogram(stat="count") +
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_bin()
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_bin() +
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_bin(binwidth = 1) +
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_bin(binwidth=1)+
stat_bin(binwidth=1, geom="text", aes(label=..count..), vjust=-1.5)+
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-1.5)+
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..))+
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-1)+
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=2)+
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=2)+
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-2)+
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-1)+
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-1, position = "stack")+
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_count(binwidth=1, aes(label=..count..))+
stat_count(binwidth=1, geom="text", aes(), vjust=-1, position = "stack")+
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(), vjust=-1, position = "stack")+
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of Age
age_distribution <- ggplot(diabetic_data, aes(x = age, fill = race,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1)+
xlab("Age Range") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of the admission code
age_distribution <-ggplot(diabetic_data, aes(x = admission_type_id, fill = gender,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1)+
xlab("Admission") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of the admission code
age_distribution <-ggplot(diabetic_data, aes(x = admission_type_id, fill = gender,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..))+
xlab("Admission") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of the admission code
age_distribution <-ggplot(diabetic_data, aes(x = admission_type_id, fill = gender,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-1)+
xlab("Admission") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of the admission code
age_distribution <-ggplot(diabetic_data, aes(x = admission_type_id, fill = gender,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-3)+
xlab("Admission") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of the admission code
age_distribution <-ggplot(diabetic_data, aes(x = admission_type_id, fill = gender,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-2)+
xlab("Admission") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of the admission code
age_distribution <-ggplot(diabetic_data, aes(x = admission_type_id, fill = gender,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-1)+
xlab("Admission") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
#Distribution of the admission code
age_distribution <-ggplot(diabetic_data, aes(x = admission_type_id, fill = race,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-1)+
xlab("Admission") +
ylab("Count") +
ggtitle("Age Distribution Inclduing Race")
age_distribution
#Distribution of the admission code
age_distribution <-ggplot(diabetic_data, aes(x = admission_type_id, fill = gender,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-1)+
xlab("Admission") +
ylab("Count") +
ggtitle("Admission Distribution by Gender")
age_distribution
new_data <- diabetic_data
new_data$age <- unclass(new_data$age)
View(new_data)
new_data$age <- unclass(new_data$age)
View(new_data)
new_data
str(new_data)
str(new_data$age)
unique(new_data$age)
new_data$age[new_data$age == "[0-10)"] <- 1
new_data$age[new_data$age == "[0-10)"] <- 1new_data$age
new_data$age[new_data$age == "[0-10)"] <- 1
new_data$age[new_data$age == "[10-20)"] <- 2
new_data$age[new_data$age == "[20-30)"] <- 3
new_data$age[new_data$age == "[30-40)"] <- 4
new_data$age[new_data$age == "[40-50)"] <- 5
new_data$age[new_data$age == "[50-60)"] <- 6
new_data$age[new_data$age == "[60-70)"] <- 7
new_data$age[new_data$age == "[70-80)"] <- 8
new_data$age[new_data$age == "[80-90)"] <- 9
new_data$age[new_data$age == "[90-100)"] <- 10
new_data$age
new_data$age = as.numeric(as.character(new_data$age))
scatter_age_time_spent <- ggplot(new_data,
aes(x = age, y = time_in_hospital)) +
geom_point(aes(color = age, shape=age), size = 3) +
xlab("Age ") +
ylab("Time Spent") +
ggtitle("Age vs Time Spent")
scatter_age_time_spent
scatter_age_time_spent <- ggplot(new_data,
aes(x = age, y = time_in_hospital)) +
geom_point(aes(color = age), size = 3) +
xlab("Age ") +
ylab("Time Spent") +
ggtitle("Age vs Time Spent")
scatter_age_time_spent
View(diabetic_data)
#Distribution of Who is taking medication
age_distribution <-ggplot(diabetic_data, aes(x = admission_type_id, fill = diabetesMed,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-1)+
xlab("Admission") +
ylab("Count") +
ggtitle("Admission Distribution by Gender")
age_distribution
#Distribution of Who is taking medication
admission_taking_diabetes_med <-ggplot(diabetic_data, aes(x = admission_type_id, fill = diabetesMed,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-1)+
xlab("Admission") +
ylab("Count") +
ggtitle("Admission Distribution by Diabetes Med")
admission_taking_diabetes_med
#Distribution Admission and insulin levels
admission_distrubition_w_insulin_level <-ggplot(diabetic_data, aes(x = admission_type_id, fill = insulin,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=-1)+
xlab("Admission ID") +
ylab("Count") +
ggtitle("Admission Type Distribution With Insulin Level")
admission_distrubition_w_insulin_level
#Distribution Admission and insulin levels
admission_distrubition_w_insulin_level <-ggplot(diabetic_data, aes(x = admission_type_id, fill = insulin,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=1)+
xlab("Admission ID") +
ylab("Count") +
ggtitle("Admission Type Distribution With Insulin Level")
admission_distrubition_w_insulin_level
#Distribution Admission and insulin levels
medical_specialty_dis <-ggplot(diabetic_data, aes(x = medical_specialty, fill = race,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=1)+
xlab("Medical Specialty") +
ylab("Count") +
ggtitle("Medical Specialty Distribution")
medical_specialty_dis
#Distribution Admission and insulin levels
medical_specialty_dis <-ggplot(diabetic_data, aes(x = medical_specialty, fill = race,label=..count..)) +
stat_count(binwidth=1)+
stat_count(binwidth=1, geom="text", aes(label=..count..), vjust=1)+
xlab("Medical Specialty") +
ylab("Count") +
flip(TRUE)+
ggtitle("Medical Specialty Distribution")
medical_specialty_dis
